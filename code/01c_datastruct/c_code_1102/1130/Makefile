
# Makefile文件用来实现自动编译
# make命令 在执行时会自动寻找名为Makefile的文件，解释执行该文件的内容，所以Makefile文件也是一个脚本文件。
#在终端执行make命令时，是执行第一条规则下的命令；如果想执行其他规则下的命令，需要显式的写明标签名称，即：make 标签名
#第一条规则中的目标是终极目标，其他下面所有规则的目标都是为该目标服务的

#Makefile文件的只要内容
#规则1：
#目标1(终极目标)（标签）：依赖列表（文件）
#	命令列表
#
#规则2：
#目标2（标签）：依赖列表（文件）
#	命令列表
#规则3：
#目标3（标签）：依赖列表（文件）
#	命令列表
#规则4：
#目标4（标签）：依赖列表（文件）
#	命令列表

# Makefile中对变量（变量是无类型的）赋值的方式：
# 1、= 延迟展开赋值
B = $A
A = 123

# 2、:= 立即展开赋值
#B := $C
#C = 234

# 3、+= 追加赋值：沿用之前的赋值方式
B += $D
D = 345
#
# 4、?= 条件赋值：沿用之前的赋值方式。如果之前已经存在值，此次不会赋值；否则赋予其该值。
B ?= $E
E = 456

all:
	@echo 'B = $B'

var: f1 f2 f3
#Makefile中存在的特殊变量
#$@ = var
#$^ = f1 f2 f3
#$< = f1
#$? = f1 f2 f3
#$* =
# $@表示当前规则中的目标	
	@echo '$$@ = $@'
# $^表示当前规则中的所有依赖	
	@echo '$$^ = $^'
# $<表示当前规则中的所有依赖中的第一个	
	@echo '$$< = $<'
# $?表示当前规则中的所有比目标文件更新的文件组成的列表	
	@echo '$$? = $?'
# $*表示模式规则中所有%之前的部分
	@echo '$$* = $*'

f1:
	@touch f1
f2:
	@touch f2
f3:
	@touch f3

