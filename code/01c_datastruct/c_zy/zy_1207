
1、实现无头循环单向链表，其中按照我们今天课堂写的单链表的程序，将其中第2个参数凡是elem_t data的参数统一修改为struct node *node
	将下面的四个函数的指针作为链表类型的函数成员，并且实现这些函数

1>、判断链表内是否存在死环，如果存在，找出死环的入口
2>、约瑟夫问题：n个人（每个人都有一个编号），从1开始报数，1，2，3，继续从1开始报数，报到3（在程序中需要作为参数传入）的出去。问最后剩下来的那个人是谁？
3>、就地反转单向链表
4>、拼接两条有序的无头单向链表为一条链表，使之依然有序

2、双向链表中节点的结构改成下面这样：
struct node {
	struct node *prev;
	struct node *next;
	char par[];
};
同样实现：头插、尾插、遍历、删除、查找、销毁函数

